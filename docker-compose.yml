#########################################################
# Bases
#########################################################
x-backend_base: &backend-base
  build:
    context: ./backend
    dockerfile: Dockerfile
  image: fourdrinier-backend
  environment:
    DOCKER_HOST: $DOCKER_HOST_OVERRIDE
    STORAGE_PATH: $STORAGE_PATH
  ports:
    - "8000:8000"
  networks:
    - fourdrinier-network
    - bridge-network

x-frontend-base: &frontend-base
  image: fourdrinier-frontend
  ports:
    - "3000:3000"
  environment:
    BACKEND_HOST: backend
    BACKEND_PORT: 8000
  networks:
    - fourdrinier-network

services:
  #########################################################
  # Backend
  #########################################################
  backend:
    <<: *backend-base
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: prod
    volumes:
      - ./tmp:/fd/db-data
      - ./ssh:/root/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
      - $STORAGE_PATH:/storage
      - ./backend/fourdrinier:/fd/backend/fourdrinier
    profiles: [ production ]

  backend_test:
    <<: *backend-base
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    volumes:
      - test-data:/fd/db-data
      - ./ssh:/root/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
      - $STORAGE_PATH:/storage

    profiles: [ testing ]

  backend_debug:
    <<: *backend-base
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    volumes:
      - ./tmp:/fd/db-data
      - ./ssh:/root/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
      - $STORAGE_PATH:/storage
      - ./backend/fourdrinier:/fd/backend/fourdrinier
    profiles: [ debug ]

  #########################################################
  # Frontend
  #########################################################
  frontend:
    <<: *frontend-base
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: prod
    profiles: [ production ]

  frontend_debug:
    <<: *frontend-base
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: debug
    volumes:
      - ./frontend/app:/app/app
      - ./frontend/public:/app/public
    profiles: [ debug ]

volumes:
  db-data:
  test-data:


networks:
  fourdrinier-network:
  bridge-network:
    driver: bridge
